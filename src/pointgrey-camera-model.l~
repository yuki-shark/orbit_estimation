#!/usr/bin/env roseus

(ros::load-ros-manifest "roseus")

(ros::roseus "calc-coordinate")

(ros::advertise "centorid_calc_from_stereo_image")



(defclass pointgrey-camera-model
  :super cascaded-link
  :slots (camera base))

(defmethod pointgrey-camera-model
  (:init ()
    (let (b)
      (send-super :init)
      ;;pointgrey camera
      (ros::subscribe "/camera_info" sensor_msgs::CameraInfo #'(lambda (msg)
          (let ((pwidth (send msg :width))
               (pheight (send msg :height))
               (p (send msg :P)))
           ;; FIXME:: add coordinates of camera
           (format t " (make-camera-from-ros-camera-info-aux ~A ~A ~A nil)"pwidth pheight p)
           (make-camera-from-ros-camera-info-aux pwidth pheight p nil)))
      ;; base
      (setq b (make-cube 30 30 1000))
      (send b :locate #f(0 0 0))
      (send b :set-color :red)
      (setq base (instance bodyset-link :init (make-cascoords) :bodies (list b) :name 'base))

      (send base :locate #f(0 0 4))

      (send self :init-ending)
      self))
  (:end-coords (&rest args) (forward-message-to end-coords args)))
